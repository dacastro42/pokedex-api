services:
  pokedex:
    container_name: pokedex_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - pokedex_net
    restart: always
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    container_name: pokedex_db
    hostname: mysql
    image: mysql:8.0.28
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --sql-mode="STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION"
    ports:
      - '${DB_PORT:-3306}:3306'
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-pokedex}
      MYSQL_USER: ${DB_USER:?err}
      MYSQL_PASSWORD: ${DB_PASSWORD:?err}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?err}
    volumes:
      - db_data:/var/lib/mysql/:rw
      - ./database:/docker-entrypoint-initdb.d/:ro
    restart: always
    networks:
      - pokedex_net
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', '$$MYSQL_USER', '--password=$$MYSQL_PASSWORD' ]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  pokedex_net:
    driver: bridge

volumes:
  db_data:
    driver: local
